<ResourceDictionary xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
                    xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
                    xmlns:mc="http://schemas.openxmlformats.org/markup-compatibility/2006"
                    xmlns:d="http://schemas.microsoft.com/expression/blend/2008"
                    xmlns:local="clr-namespace:KLPlugins.DynLeaderboards.Settings.UI"
                    xmlns:sh="clr-namespace:SimHub.Plugins.Styles;assembly=SimHub.Plugins"
                    mc:Ignorable="d"
                    xmlns:mah="http://metro.mahapps.com/winfx/xaml/controls"
                    xmlns:ui="clr-namespace:SimHub.Plugins.UI;assembly=SimHub.Plugins"
                    xmlns:system="clr-namespace:System;assembly=mscorlib"
                    xmlns:xctk="http://schemas.xceed.com/wpf/xaml/toolkit">

    <local:IsEnabledToOpacityConverter x:Key="IsEnabledToOpacityConverter" />
    <local:BoolToVisibilityCollapsedConverter x:Key="BoolToVisibilityCollapsedConverter" />
    <local:BoolToVisibilityHiddenConverter x:Key="BoolToVisibilityHiddenConverter" />
    <local:IsNotNull x:Key="IsNotNull" />
    <local:IsNull x:Key="IsNull" />
    <local:NullToUnsetValueConverter x:Key="NullToUnsetValueConverter" />
    <local:ValidClassNameRule x:Key="ValidClassNameRule" />
    <local:StringCarClassConverter x:Key="StringCarClassConverter" />

    <!-- Limit tooltip width. -->
    <Style TargetType="ToolTip">
        <Style.Resources>
            <Style TargetType="ContentPresenter">
                <Style.Resources>
                    <Style TargetType="TextBlock">
                        <Setter Property="TextWrapping"
                                Value="Wrap" />
                    </Style>
                </Style.Resources>
            </Style>
        </Style.Resources>
        <Setter Property="MaxWidth"
                Value="300" />
        <Setter Property="Background"
                Value="#373737" />
        <Setter Property="Foreground"
                Value="#F0F0F0" />
    </Style>

    <!-- Default toggle button style -->
    <Style TargetType="sh:SHToggleButton">
        <Setter Property="Width"
                Value="75" />
        <Setter Property="Height"
                Value="20" />
    </Style>

    <!-- Default text block style -->
    <Style TargetType="TextBlock">
        <Setter Property="FontSize"
                Value="13" />
        <Setter Property="Margin"
                Value="5" />
        <Setter Property="VerticalAlignment"
                Value="Center" />
        <Setter Property="HorizontalAlignment"
                Value="Left" />
        <Setter Property="TextWrapping"
                Value="Wrap" />
    </Style>


    <!-- Row separator -->
    <Style x:Key="RowSep"
           TargetType="Separator">
        <Setter Property="Background"
                Value="LightGray" />
        <Setter Property="Height"
                Value="1" />
        <Setter Property="Margin"
                Value="0,0,20,0" />
    </Style>

    <!-- Dark mode color picker -->
    <Style TargetType="xctk:ColorPicker">
        <Setter Property="Background"
                Value="#373737" />
        <Setter Property="DropDownBackground"
                Value="#373737" />
        <Setter Property="TabBackground"
                Value="#373737" />
        <Setter Property="HeaderBackground"
                Value="#373737" />
        <Setter Property="Foreground"
                Value="#F0F0F0" />
        <Setter Property="TabForeground"
                Value="#F0F0F0" />
        <Setter Property="HeaderForeground"
                Value="#F0F0F0" />
        <Setter Property="BorderBrush"
                Value="#101010" />
        <Setter Property="DropDownBorderBrush"
                Value="#101010" />
    </Style>

    <!-- ButtonMenuItem default style -->
    <Style TargetType="Border"
           x:Key="ButtonMenuItem_Border">
        <Setter Property="Background"
                Value="#373737" />
        <Setter Property="CornerRadius"
                Value="5" />
        <Setter Property="Padding"
                Value="5,0,10,0" />
        <Style.Triggers>
            <Trigger Property="IsMouseOver"
                     Value="True">
                <Setter Property="Background"
                        Value="#454545" />
            </Trigger>
        </Style.Triggers>
    </Style>

    <Style TargetType="{x:Type local:ButtonMenuItem}">
        <Setter Property="Margin"
                Value="5,1,5,1" />
        <Setter Property="Padding"
                Value="0" />

        <Setter Property="HeaderTemplate">
            <Setter.Value>
                <DataTemplate>
                    <Border Style="{StaticResource ButtonMenuItem_Border}"
                            Padding="7.5,2,7.5,2">
                        <TextBlock Text="{Binding}"
                                   HorizontalAlignment="Center"
                                   VerticalAlignment="Center"
                                   FontWeight="Medium" />
                    </Border>
                </DataTemplate>
            </Setter.Value>
        </Setter>

        <Style.Triggers>
            <Trigger Property="ShowDropDown"
                     Value="True">

                <Setter Property="HeaderTemplate">
                    <Setter.Value>
                        <DataTemplate>
                            <Border Style="{StaticResource ButtonMenuItem_Border}"
                                    Padding="7.5,2,7.5,2">
                                <StackPanel Orientation="Horizontal"
                                            Margin="0"
                                            ToolTip="Click to expand">
                                    <TextBlock Text="{Binding}"
                                               HorizontalAlignment="Center"
                                               VerticalAlignment="Center"
                                               FontWeight="Medium" />
                                    <TextBlock Text="▼"
                                               HorizontalAlignment="Right"
                                               VerticalAlignment="Center"
                                               FontWeight="UltraLight"
                                               Foreground="DarkGray"
                                               Padding="0"
                                               Margin="10,0,0,0"
                                               FontSize="8" />
                                </StackPanel>

                            </Border>
                        </DataTemplate>
                    </Setter.Value>
                </Setter>
            </Trigger>

        </Style.Triggers>
    </Style>

    <!-- Color grid styles -->
    <Style x:Key="ColorGrid_ColumnLabel"
           TargetType="{x:Type TextBlock}"
           BasedOn="{StaticResource {x:Type TextBlock}}">
        <Setter Property="Grid.Row"
                Value="0" />
        <Setter Property="Opacity"
                Value="0.75" />
        <Setter Property="Margin"
                Value="10,0,10,5" />
        <Setter Property="HorizontalAlignment"
                Value="Left" />
    </Style>

    <Style x:Key="ColorGrid_EnabledToggle"
           TargetType="{x:Type sh:SHToggleButton}"
           BasedOn="{StaticResource {x:Type sh:SHToggleButton}}">
        <Setter Property="Grid.Column"
                Value="0" />
        <Setter Property="Margin"
                Value="0,0,0,0" />
    </Style>

    <Style x:Key="ColorGrid_LabelBorder"
           TargetType="{x:Type Border}">
        <Setter Property="Grid.Column"
                Value="1" />
        <Setter Property="CornerRadius"
                Value="5" />
        <Setter Property="Height"
                Value="25" />
        <Setter Property="Margin"
                Value="5,0,5,0" />
    </Style>

    <Style x:Key="ColorGrid_LabelText"
           TargetType="{x:Type TextBlock}"
           BasedOn="{StaticResource {x:Type TextBlock}}">
        <Setter Property="Padding"
                Value="0,0,5,0" />
        <Setter Property="FontWeight"
                Value="Bold" />
        <Setter Property="HorizontalAlignment"
                Value="Center" />
    </Style>

    <Style x:Key="ColorGrid_ColorPicker"
           TargetType="{x:Type xctk:ColorPicker}"
           BasedOn="{StaticResource {x:Type xctk:ColorPicker}}">
        <Setter Property="Width"
                Value="75" />
        <Setter Property="Height"
                Value="20" />
        <Setter Property="Margin"
                Value="5,0,5,0" />
    </Style>

    <Style TargetType="sh:SHButtonSecondary"
           BasedOn="{StaticResource {x:Type sh:SHButtonSecondary}}">
        <Setter Property="Padding"
                Value="5" />
        <Setter Property="Margin"
                Value="5,5,5,5" />
        <Setter Property="Height"
                Value="26" />
        <Setter Property="VerticalAlignment"
                Value="Center" />
    </Style>

    <Style TargetType="sh:SHButtonPrimary"
           BasedOn="{StaticResource {x:Type sh:SHButtonPrimary}}">
        <Setter Property="Padding"
                Value="5" />
        <Setter Property="Margin"
                Value="5,5,5,5" />
        <Setter Property="Height"
                Value="26" />
        <Setter Property="VerticalAlignment"
                Value="Center" />
    </Style>

    <Style x:Key="ColorGrid_ResetButton"
           TargetType="sh:SHButtonSecondary"
           BasedOn="{StaticResource {x:Type sh:SHButtonSecondary}}">
        <Setter Property="Padding"
                Value="5" />
        <Setter Property="Margin"
                Value="5,5,5,5" />
        <Setter Property="Height"
                Value="26" />
        <Setter Property="VerticalAlignment"
                Value="Center" />
    </Style>

    <Style x:Key="ColorGrid_RemoveButton"
           TargetType="sh:SHButtonPrimary"
           BasedOn="{StaticResource {x:Type sh:SHButtonPrimary}}">
        <Setter Property="Padding"
                Value="5" />
        <Setter Property="Margin"
                Value="5,5,5,5" />
        <Setter Property="Height"
                Value="26" />
        <Setter Property="VerticalAlignment"
                Value="Center" />
    </Style>




    <Style x:Key="ColorGrid_ResetButtonPrimary"
           TargetType="sh:SHButtonPrimary"
           BasedOn="{StaticResource {x:Type sh:SHButtonPrimary}}">
        <Setter Property="Padding"
                Value="5" />
        <Setter Property="Margin"
                Value="5,5,15,5" />
        <Setter Property="Content"
                Value="Reset" />
    </Style>

    <Style TargetType="{x:Type Hyperlink}"
           BasedOn="{StaticResource {x:Type Hyperlink}}">
        <Setter Property="Foreground"
                Value="DodgerBlue" />
        <Setter Property="TextBlock.TextDecorations"
                Value="None" />
        <Style.Triggers>
            <Trigger Property="IsMouseOver"
                     Value="True">
                <Setter Property="Foreground"
                        Value="DeepSkyBlue" />
                <Setter Property="TextBlock.TextDecorations"
                        Value="None" />
            </Trigger>
        </Style.Triggers>
    </Style>

    <!-- Converts relative docs path to full -->
    <local:DocsPathConverter x:Key="DocsPathConverter" />

    <Style TargetType="{x:Type local:DocsHyperlink}"
           BasedOn="{StaticResource {x:Type Hyperlink}}">
        <Setter Property="NavigateUri"
                Value="{Binding RelativeSource={RelativeSource Mode=Self}, Path=RelativePath, Converter={StaticResource DocsPathConverter}}" />
    </Style>

    <Style TargetType="{x:Type local:DocsHelpButton}">
        <Setter Property="ContentTemplate">
            <Setter.Value>
                <DataTemplate>
                    <Border Background="#373737"
                            HorizontalAlignment="Right"
                            CornerRadius="5"
                            Height="20"
                            Width="20"
                            ToolTip="View the documentation.">
                        <TextBlock HorizontalAlignment="Center"
                                   VerticalAlignment="Center"
                                   Margin="0"
                                   Padding="0">
							<local:DocsHyperlink Style="{StaticResource {x:Type local:DocsHyperlink}}"
                                                 RelativePath="{Binding RelativeSource={RelativeSource Mode=FindAncestor, AncestorType={x:Type local:DocsHelpButton}}, Path=RelativePath}">❓</local:DocsHyperlink>
                        </TextBlock>
                    </Border>
                </DataTemplate>
            </Setter.Value>
        </Setter>

    </Style>

    <Style TargetType="{x:Type local:SectionTitle}">
        <!-- With help link -->
        <Setter Property="ContentTemplate">
            <Setter.Value>
                <DataTemplate>
                    <DockPanel Margin="0">
                        <sh:SHSectionSeparator DockPanel.Dock="Top" />
                        <sh:SHSectionTitle Style="{StaticResource {x:Type sh:SHSectionTitle}}"
                                           DockPanel.Dock="Left"
                                           Text="{Binding}" />

                        <local:DocsHelpButton DockPanel.Dock="Right"
                                              Style="{StaticResource {x:Type local:DocsHelpButton}}"
                                              RelativePath="{Binding RelativeSource={RelativeSource Mode=FindAncestor, AncestorType={x:Type local:SectionTitle}}, Path=HelpPath}">❓</local:DocsHelpButton>
                    </DockPanel>
                </DataTemplate>
            </Setter.Value>
        </Setter>


        <!-- Without help link -->
        <Style.Triggers>
            <Trigger Property="HelpPath"
                     Value="null">
                <Setter Property="ContentTemplate">
                    <Setter.Value>
                        <DataTemplate>
                            <StackPanel Margin="0">
                                <sh:SHSectionSeparator />
                                <sh:SHSectionTitle  Style="{StaticResource {x:Type sh:SHSectionTitle}}"
                                                    Text="{Binding}" />
                            </StackPanel>
                        </DataTemplate>
                    </Setter.Value>
                </Setter>
            </Trigger>
        </Style.Triggers>

    </Style>

    <Style TargetType="{x:Type local:ClassPreview}">
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="{x:Type local:ClassPreview}">
                    <StackPanel Orientation="Horizontal">
                        <TextBlock VerticalAlignment="Top"
                                   FontSize="7"
                                   HorizontalAlignment="Left"
                                   Margin="0"
                                   Padding="0"
                                   Foreground="Tomato"
                                   FontWeight="Bold"
                                   Width="6"
                                   Text="⬤"
                                   Visibility="{Binding IsColorEnabled, Converter={StaticResource BoolToVisibilityHiddenConverter}, ConverterParameter=rev}" />
                        <Border CornerRadius="5"
                                HorizontalAlignment="Left"
                                Height="26"
                                Margin="2"
                                Background="{Binding Background}">
                            <TextBlock Padding="10,0,10,0"
                                       HorizontalAlignment="Center"
                                       VerticalAlignment="Center"
                                       FontWeight="Bold"
                                       Text="{Binding ClassName}"
                                       Foreground="{Binding Foreground}"></TextBlock>
                        </Border>

                    </StackPanel>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>

    <Style TargetType="{x:Type local:ClassListBoxItem}">
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate>
                    <StackPanel Orientation="Horizontal">
                        <local:ClassPreview DataContext="{Binding ClassPreview}"
                                            Opacity="{Binding Source={RelativeSource AncestorLevel=1, AncestorType={x:Type local:ClassListBoxItem}}, Path=HasReplacement, Converter={StaticResource IsEnabledToOpacityConverter}, ConverterParameter=rev}" />

                        <StackPanel Orientation="Horizontal"
                                    Margin="0"
                                    Visibility="{Binding HasReplacement, Converter={StaticResource BoolToVisibilityCollapsedConverter}}">
                            <TextBlock Margin="0"
                                       Padding="5,0,5,0"
                                       FontWeight="Bold"
                                       HorizontalAlignment="Center"
                                       VerticalAlignment="Center"
                                       Text="→" />

                            <local:ClassPreview DataContext="{Binding ReplaceWithPreview}" />
                        </StackPanel>
                    </StackPanel>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>

    <Style TargetType="{x:Type local:LeaderboardComboBoxItem}">
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate>
                    <StackPanel Orientation="Horizontal">
                        <sh:SHToggleCheckbox IsChecked="{Binding IsEnabled}" />
                        <TextBlock Text="{Binding Name}"
                                   VerticalAlignment="Center" />
                    </StackPanel>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>

    <Style TargetType="{x:Type local:LeaderboardRotationItem}">
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate>
                    <StackPanel Orientation="Horizontal"
                                Margin="0">
                        <sh:SHToggleCheckbox IsChecked="{Binding IsEnabled, Mode=TwoWay}" />
                        <TextBlock Text="{Binding Name}"
                                   Width="150"
                                   VerticalAlignment="Center" />
                        <sh:SHToggleCheckbox IsChecked="{Binding RemoveIfSingleClass, Mode=TwoWay}" />
                        <sh:SHToggleCheckbox IsChecked="{Binding RemoveIfSingleCup, Mode=TwoWay}" />
                    </StackPanel>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>



    <Style x:Key="TransparentSelect_DataGridRow"
           TargetType="{x:Type DataGridRow}"
           BasedOn="{StaticResource {x:Type DataGridRow}}">

        <Setter Property="BorderBrush"
                Value="#4000" />
        <Setter Property="BorderThickness"
                Value="0,2,0,0" />
        <Setter Property="Background"
                Value="Transparent" />
    </Style>

    <Style TargetType="{x:Type DataGridRow}"
           BasedOn="{StaticResource TransparentSelect_DataGridRow}">
        <Style.Triggers>
            <Trigger Property="IsSelected"
                     Value="True">
                <Trigger.Setters>
                    <Setter Property="Background"
                            Value="#196E92" />
                </Trigger.Setters>
            </Trigger>
        </Style.Triggers>
    </Style>


    <Style TargetType="{x:Type local:DataGrid2}"
           BasedOn="{StaticResource {x:Type DataGrid}}">

        <Setter Property="DefaultGroupStyle">
            <Setter.Value>
                <GroupStyle>
                    <GroupStyle.ContainerStyle>
                        <Style TargetType="{x:Type GroupItem}">
                            <Setter Property="Template">
                                <Setter.Value>
                                    <ControlTemplate TargetType="{x:Type GroupItem}">
                                        <StackPanel Orientation="Vertical">
                                            <Border Background="#0fffffff"
                                                    CornerRadius="5"
                                                    Margin="5">
                                                <TextBlock Text="{Binding Path=Name}"
                                                           FontWeight="Bold"
                                                           Padding="5" />
                                            </Border>
                                            <ItemsPresenter Margin="10,0,10,5" />
                                        </StackPanel>
                                    </ControlTemplate>
                                </Setter.Value>
                            </Setter>
                        </Style>
                    </GroupStyle.ContainerStyle>
                </GroupStyle>
            </Setter.Value>
        </Setter>

        <Setter Property="RowStyle"
                Value="{StaticResource {x:Type DataGridRow}}" />

        <Setter Property="ColumnHeaderStyle">
            <Setter.Value>
                <Style TargetType="{x:Type DataGridColumnHeader}"
                       BasedOn="{StaticResource {x:Type DataGridColumnHeader}}">

                    <Setter Property="Background"
                            Value="Transparent" />
                    <Setter Property="FontWeight"
                            Value="Bold" />
                    <Setter Property="Margin"
                            Value="5,0,5,0" />
                    <Setter Property="Padding"
                            Value="0,0,0,1" />
                    <Setter Property="BorderBrush"
                            Value="#222" />
                    <Setter Property="BorderThickness"
                            Value="0,0,0,2" />
                </Style>
            </Setter.Value>
        </Setter>
    </Style>

    <Style x:Key="ExposedPropertiesDataGrid2"
           TargetType="{x:Type local:DataGrid2}"
           BasedOn="{StaticResource {x:Type local:DataGrid2}}">
        <Setter Property="AutoGenerateColumns"
                Value="False" />
        <Setter Property="CanUserAddRows"
                Value="False" />
        <Setter Property="CanUserDeleteRows"
                Value="False" />
        <Setter Property="CanUserReorderColumns"
                Value="False" />
        <Setter Property="CanUserResizeColumns"
                Value="False" />
        <Setter Property="CanUserResizeRows"
                Value="False" />
        <Setter Property="CanUserSortColumns"
                Value="False" />
        <Setter Property="SelectionMode"
                Value="Extended" />
        <Setter Property="Background"
                Value="Transparent" />
    </Style>

    <DataGridTemplateColumn x:Key="ExposedPropertiesDataGrid_Column0"
                            IsReadOnly="True">
        <DataGridTemplateColumn.CellTemplate>
            <DataTemplate>
                <!-- IMPORTANT: UpdateSourceTrigger must be explicitly set, otherwise the updates are not triggered! -->
                <sh:SHToggleCheckbox IsChecked="{Binding Path=IsEnabled, Mode=TwoWay, UpdateSourceTrigger=PropertyChanged}" />
            </DataTemplate>
        </DataGridTemplateColumn.CellTemplate>
    </DataGridTemplateColumn>

    <DataGridTextColumn x:Key="ExposedPropertiesDataGrid_Column1"
                        Header="Property name"
                        Binding="{Binding Path=Name}"
                        MinWidth="250"
                        IsReadOnly="True" />

    <!-- Use DataGridTemplateColumn instead of DataGridTextColumn so we can set the TextBlock.TextWrapping to Wrap. -->
    <DataGridTemplateColumn x:Key="ExposedPropertiesDataGrid_Column2"
                            IsReadOnly="True"
                            Width="*"
                            Header="Description">
        <DataGridTemplateColumn.CellTemplate>
            <DataTemplate>
                <TextBlock Text="{Binding Description}"
                           TextWrapping="Wrap"
                           Margin="0,5,0,5" />
            </DataTemplate>
        </DataGridTemplateColumn.CellTemplate>
    </DataGridTemplateColumn>


    <Style TargetType="{x:Type ListViewItem}"
           BasedOn="{StaticResource {x:Type ListViewItem}}">

        <Setter Property="BorderBrush"
                Value="#0fffffff" />
        <Setter Property="BorderThickness"
                Value="0,0,0,1" />
        <Setter Property="Background"
                Value="Transparent" />

        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="{x:Type ListViewItem}">
                    <Border x:Name="Bd"
                            CornerRadius="5"
                            Background="{TemplateBinding Background}"
                            BorderBrush="{TemplateBinding BorderBrush}"
                            BorderThickness="{TemplateBinding BorderThickness}">
                        <GridViewRowPresenter VerticalAlignment="{TemplateBinding VerticalContentAlignment}" />
                    </Border>

                    <ControlTemplate.Triggers>

                        <Trigger Property="IsSelected"
                                 Value="true">
                            <Setter Property="Background"
                                    TargetName="Bd"
                                    Value="{DynamicResource AccentColorBrush}" />
                        </Trigger>
                        <Trigger Property="IsMouseOver"
                                 Value="true">
                            <Setter Property="Background"
                                    TargetName="Bd"
                                    Value="{DynamicResource AccentColorBrush3}" />
                        </Trigger>
                    </ControlTemplate.Triggers>

                </ControlTemplate>
            </Setter.Value>
        </Setter>


    </Style>

    <Style x:Key="TransparentSelection_ListViewItem"
           TargetType="{x:Type ListViewItem}"
           BasedOn="{StaticResource {x:Type ListViewItem}}">

        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="{x:Type ListViewItem}">
                    <Border Background="{TemplateBinding Background}"
                            BorderBrush="{TemplateBinding BorderBrush}"
                            BorderThickness="{TemplateBinding BorderThickness}">
                        <GridViewRowPresenter VerticalAlignment="{TemplateBinding VerticalContentAlignment}" />
                    </Border>

                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>

    <Style x:Key="HideHeaderGridView"
           TargetType="GridViewColumnHeader">
        <Setter Property="Visibility"
                Value="Collapsed" />
    </Style>

    <Style TargetType="{x:Type local:ListView2}"
           BasedOn="{StaticResource {x:Type ListView}}">

        <Setter Property="ScrollViewer.HorizontalScrollBarVisibility"
                Value="Disabled" />

        <Setter Property="DefaultGroupStyle">
            <Setter.Value>
                <x:Array Type="{x:Type GroupStyle}">
                    <GroupStyle>
                        <GroupStyle.ContainerStyle>
                            <Style TargetType="{x:Type GroupItem}">
                                <Setter Property="Template">
                                    <Setter.Value>
                                        <ControlTemplate TargetType="{x:Type GroupItem}">
                                            <StackPanel Orientation="Vertical">
                                                <Border Background="#0fffffff"
                                                        CornerRadius="5"
                                                        Margin="10,5,10,5">
                                                    <TextBlock Text="{Binding Name}"
                                                               FontWeight="Bold"
                                                               Padding="5" />
                                                </Border>
                                                <ItemsPresenter Margin="10,0,10,5" />
                                            </StackPanel>
                                        </ControlTemplate>
                                    </Setter.Value>
                                </Setter>
                            </Style>
                        </GroupStyle.ContainerStyle>

                    </GroupStyle>

                    <GroupStyle>
                        <GroupStyle.ContainerStyle>
                            <Style TargetType="{x:Type GroupItem}">
                                <Setter Property="Template">
                                    <Setter.Value>
                                        <ControlTemplate TargetType="{x:Type GroupItem}">
                                            <StackPanel Orientation="Vertical">
                                                <Border Background="#08ffffff"
                                                        CornerRadius="5"
                                                        Margin="10,5,10,5">
                                                    <TextBlock Text="{Binding Name}"
                                                               Padding="2.5"
                                                               FontStyle="Italic" />
                                                </Border>
                                                <ItemsPresenter Margin="10,0,10,5" />
                                            </StackPanel>
                                        </ControlTemplate>
                                    </Setter.Value>
                                </Setter>


                                <Style.Triggers>
                                    <DataTrigger Binding="{Binding Name}"
                                                 Value="">
                                        <Setter Property="Template">
                                            <Setter.Value>
                                                <ControlTemplate TargetType="{x:Type GroupItem}">
                                                    <ItemsPresenter />
                                                </ControlTemplate>
                                            </Setter.Value>
                                        </Setter>
                                    </DataTrigger>
                                </Style.Triggers>
                            </Style>
                        </GroupStyle.ContainerStyle>

                    </GroupStyle>

                </x:Array>
            </Setter.Value>
        </Setter>

        <Setter Property="Background"
                Value="Transparent" />

        <Setter Property="BorderThickness"
                Value="0" />
    </Style>

    <Style x:Key="ExposedPropertiesListView2"
           TargetType="{x:Type local:ListView2}"
           BasedOn="{StaticResource {x:Type local:ListView2}}">
        <Setter Property="SelectionMode"
                Value="Extended" />

        <Setter Property="View">
            <Setter.Value>
                <GridView ColumnHeaderContainerStyle="{StaticResource HideHeaderGridView}">

                    <GridViewColumn>
                        <GridViewColumn.CellTemplate>
                            <DataTemplate>
                                <!-- IMPORTANT: UpdateSourceTrigger must be explicitly set, otherwise the updates are not triggered! -->
                                <sh:SHToggleCheckbox IsChecked="{Binding Path=IsEnabled, Mode=TwoWay, UpdateSourceTrigger=PropertyChanged}" />
                            </DataTemplate>
                        </GridViewColumn.CellTemplate>
                    </GridViewColumn>

                    <GridViewColumn>
                        <GridViewColumn.CellTemplate>
                            <DataTemplate>
                                <TextBlock Text="{Binding Path=Name}"
                                           MinWidth="250" />
                            </DataTemplate>
                        </GridViewColumn.CellTemplate>
                    </GridViewColumn>

                    <GridViewColumn>
                        <GridViewColumn.CellTemplate>
                            <DataTemplate>
                                <TextBlock Text="{Binding Path=Description}"
                                           TextWrapping="Wrap" />
                            </DataTemplate>
                        </GridViewColumn.CellTemplate>
                    </GridViewColumn>
                </GridView>
            </Setter.Value>
        </Setter>
    </Style>

    <Style TargetType="{x:Type DockPanel}"
           x:Key="TabOuterDockPanel">
        <Setter Property="Margin"
                Value="20,20,34,20" />
        <!-- Extra margin to the right to align help button with other tabs which also have the scroll bar on the right -->
    </Style>

    <Style TargetType="{x:Type Border}"
           x:Key="SelectedItemDetailsBorder">
        <Setter Property="Background"
                Value="#2f2f2f" />
        <Setter Property="CornerRadius"
                Value="10" />
        <Setter Property="Margin"
                Value="10,5,5,5" />
    </Style>

</ResourceDictionary>